/////////////////////////////////////////////////////////混合器/////////////////////////////////////////////////////////
//                                                                                                                    //
//                      Last Updated Date: 2017-06-01          By: Li Yugang ( bihi@qq.com )                          //
//                                                                                                                    //
/////////////////////////////////////////////////////////混合器/////////////////////////////////////////////////////////

//设置 单位转换 px2rem
@function rem($px, $baseFontSize:20px) {
  //参数说明：$px: 所要转换元素大小(px)   $baseFontSize: 根字体大小(normalize.css设置的是20)   设计稿是2倍视觉稿，所以要除以2
  @if unitless($px) {
    //判断 '$px' 是否带单位，如果不带单位返回的值为true
    //@warn "假设#{$px}为像素，尝试将其转换为像素";
    @return rem($px/2 + 0px);
  } @else if unit($px) == rem {
    //判断 '$px' 的单位是rem，则
    @return $px;
  }
  @return ($px/$baseFontSize)*1rem
}

//设置 箭头
@mixin setArrow($direction:right, $arrowsize:8px, $borderColor:#C8C8CD, $borderWidth:1px) {
  //  参数说明：  $direction: 箭头方向（默认右）    $arrowsize: 箭头大小（默认6px）    $borderColor: 箭头颜色（默认#C8C8CD）    $borderWidth: 箭头宽度（默认2px）
  @include flexbox((display: inline-flex, align-self: center));
  height: $arrowsize;
  width: $arrowsize;
  box-sizing: border-box;
  border-width: $borderWidth $borderWidth 0 0;
  border-color: $borderColor;
  border-style: solid;

  @if $direction == top {

    @include rotate(-45deg);
    //transform: matrix(0.71, -0.71, 0.71, 0.71, 0, 0); // rotate(-45deg)

  } @else if $direction == right {

    @include rotate(45deg);
    //transform: matrix(0.71, 0.71, -0.71, 0.71, 0, 0); // rotate(45deg);

  } @else if $direction == bottom {

    @include rotate(135deg);
    //transform: matrix(-0.71, 0.71, -0.71, -0.71, 0, 0); // rotate(135deg);

  } @else if $direction == left {

    @include rotate(-135deg);
    //transform: matrix(-0.71, -0.71, 0.71, -0.71, 0, 0); // rotate(-135deg);

  } @else if $direction == ">" {
    position: absolute;
    top: 50%;
    right: $vw;
    @include transform(rotate(45deg) translateY(-50%));
  }
}

//设置 边框线
@mixin setLine($direction, $left:0, $background: #d3d3d3,$scale:0.5) {
  //  参数说明：    $direction: 边框位置（无默认, 当值为 'all' 时为全边框）    $left: 相对偏移距离（仅上边和下边框线有该属性，默认为0）    $c: 边框颜色（默认#C7C7C7
  content: " ";
  position: absolute;
  box-sizing: border-box;
  @if $direction == top {
    left: $left;
    top: 0;
    right: 0;
    height: 1px;
    background: $background;
    -webkit-transform-origin: 0 0;
    transform-origin: 0 0;
    @include scaleY($scale);
  } @else if $direction == right {
    right: 0;
    top: 0;
    width: 1px;
    bottom: 0;
    background: $background;
    -webkit-transform-origin: 100% 0;
    transform-origin: 100% 0;
    @include scaleX($scale);
  } @else if $direction == bottom {
    left: $left;
    bottom: 0;
    right: 0;
    height: 1px;
    background: $background;
    -webkit-transform-origin: 0 100%;
    transform-origin: 0 100%;
    @include scaleY($scale);
  } @else if $direction == left {
    left: 0;
    top: 0;
    width: 1px;
    bottom: 0;
    background: $background;
    -webkit-transform-origin: 0 0;
    transform-origin: 0 0;
    @include scaleX($scale);
  } @else if $direction == all {
    top: 0;
    left: 0;
    border: 1px solid $background;
    width: 200%;
    height: 200%;
    -webkit-transform-origin: 0 0;
    transform-origin: 0 0;
    @include scale($scale);
  } @else if $direction == "|" {
    width: 1px;
    height: 40%;
    background-color: $background;
    top: 50%;
    left: 0;
    @include transform(scaleX($scale) translateY(-50%));
  }
}

//设置 实体三角形
@mixin setTriangle($direction,$color:currentColor,$scale:.618) {
  content: '▶';
  @include flexbox((display: inline-flex));
  @if $direction == top {
    transform: scale($scale) rotate(-90deg);
  } @else if $direction == right {
    transform: scale($scale) rotate(0deg);
  } @else if $direction == bottom {
    transform: scale($scale) rotate(90deg);
  } @else if $direction == left {
    transform: scale($scale) rotate(180deg);
  }
  color: $color;
  margin: rem(8);
  @include transition(transform 0.3s ease);
}

//设置 按钮
@mixin setBtn($position,$w,$h,$fz,$bdrds,$bg,$c:#fff) {
  position: $position;
  width: $w;
  height: rem($h);
  line-height: rem($h);
  font-size: rem($fz);
  color: $c;
  text-align: center;
  background-color: $bg;
  border-radius: rem($bdrds);
}

//设置 超出 X 轴后出现水平滚动条
@mixin setScroll($height,$background: #fff) {
  @include flexbox((display: flex, flex-direction:column, flex-wrap: wrap, justify-content: center,));
  $h: rem($height);
  width: 100vw;
  height: $h;
  overflow: scroll;
  background-color: $background;
}

//设置 图片破碎背景图
@mixin setBroken($content:'') {
  content: $content;
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-size: cover;
  //background-image:url('../user.svg');
  //background-color: #fff;
}

//设置 svg背景icon图标
@mixin setIcon($width:24,$height:24,$mg:.5ch) {
  $w: rem($width);
  $h: rem($height);
  content: '';
  display: inline-block;
  width: $w;
  height: $h;
  margin-right: $mg;
  @include background-size(cover);
  //background-image: url("../icon-xxx.svg");
}

//设置 switch 开关按钮
@mixin setSwitch($width:100,$height:50,$checkedColor:#1AAD19) {
  //             <div class="switchBtn">
  //                 <div>switch 开关按钮</div>
  //                 <input type="checkbox" id="switch">
  //                 <label for="switch"></label>
  //             </div>
  $w: rem($width);
  $h: rem($height);

  input[type="checkbox"] {
    display: none;
    + label {
      position: relative;
      @include flexbox((display: inline-flex,));
      width: $w;
      height: $h;
      background: #e9e9e9;
      box-shadow: .5px .5px 2px #aaa;
      @include border-radius($h/2);
      @include transition(0.3s);
      &::after {
        content: '';
        cursor: pointer;
        @include flexbox((display: flex, align-self: center));
        width: .9*$h;
        height: .9*$h;
        position: absolute;
        left: 0;
        background: #fff;
        border-radius: 50%;
        box-shadow: .5px .5px 2px #aaa;
        @include transition(0.3s);
      }
    }
    &:checked {
      + label {
        background: $checkedColor;
        &::after {
          //left: calc(100% - #{$h});
          left: $w - $h;
        }
      }
    }
  }
}

//设置 省略号
@mixin setEllipsis($width:auto) { //超出当前宽度后省略号，不折行（即只有一行）
  width: $width;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
}

//设置 最多显示 $line 行后省略
@mixin setEllipsisLine($line:2) { //内容显示两行后省略号，折行
  overflow: hidden;
  text-overflow: ellipsis;
  display: -webkit-box;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: $line;
}

/////////////////////////////////////////////////////////不常用css样式/////////////////////////////////////////////////////////

@mixin text_wrap() { //仅限英文，允许单词、链接拆分折行（中文是等宽字符，永远用不到！）
  word-wrap: break-word;
  word-break: break-all;
}

@mixin hyphens() { //仅限英文，允许单词拆分折行后出现连字符
  word-wrap: break-word;
  -webkit-hyphens: auto;
  hyphens: auto;
}

@mixin diagonal-stripes {
  //同色系斜条纹背景
  background: linear-gradient(-45deg,
    #e4eaf2 25%, #dae2f0 0, #dae2f0 50%,
    #e4eaf2 0, #e4eaf2 75%, #dae2f0 0);
  background-size: .3rem .3rem;
}

//设置 波点 ex: @include polka(30px, 30%, #655, tan);
@mixin polka($size, $dot, $base, $accent) {
  background: $base;
  background-image: radial-gradient($accent $dot, transparent 0), radial-gradient($accent $dot, transparent 0);
  background-size: $size $size;
  background-position: 0 0, $size/2 $size/2;
}

//设置 棋盘格-css版  ex: @include checkerboard(15px, #58a, tan);
@mixin checkerboard($size, $base, $accent: rgba(0,0,0,.25)) {
  background: $base;
  background-image: linear-gradient(45deg, $accent 25%, transparent 0, transparent 75%, $accent 0), linear-gradient(45deg, $accent 25%, transparent 0, transparent 75%, $accent 0);
  background-position: 0 0, $size $size;
  background-size: 2*$size 2*$size;
}

///设置 棋盘格-svg版，出于可读性的考虑，反斜杠（\） 来转义每行末尾的换行。
@mixin checkerboard {
  background: #eee url('data:image/svg+xml,\
              <svg xmlns="http://www.w3.org/2000/svg" width="100" height="100" fill-opacity=".25" >\
              <rect x="50" width="50" height="50" />\
              <rect y="50" width="50" height="50" />\
              </svg>');
  background-size: 30px 30px;
}

//设置 菱形图片
@mixin diamond-images {
  max-width: 150px;
  margin: 20px;
  -webkit-clip-path: polygon(50% 0, 100% 50%, 50% 100%, 0 50%);
  clip-path: polygon(50% 0, 100% 50%, 50% 100%, 0 50%);
  transition: 1s;
  &:hover {
    -webkit-clip-path: polygon(0 0, 100% 0, 100% 100%, 0 100%);
    clip-path: polygon(0 0, 100% 0, 100% 100%, 0 100%);
  }
}

//设置 切角效果 ex: @include beveled-corners(#58a, 15px, 5px);
@mixin beveled-corners($bg,$tl:0, $tr:$tl, $br:$tl, $bl:$tr) {
  background: $bg;
  background: linear-gradient(135deg, transparent $tl, $bg 0) top left, linear-gradient(225deg, transparent $tr, $bg 0) top right, linear-gradient(-45deg, transparent $br, $bg 0) bottom right, linear-gradient(45deg, transparent $bl, $bg 0) bottom left;
  background-size: 50% 50%;
  background-repeat: no-repeat;
}

//设置 弧形切角
@mixin scoop-corners {
  background: #58a;
  background: radial-gradient(circle at top left, transparent 15px, #58a 0) top left,
  radial-gradient(circle at top right, transparent 15px, #58a 0) top right,
  radial-gradient(circle at bottom right, transparent 15px, #58a 0) bottom right,
  radial-gradient(circle at bottom left, transparent 15px, #58a 0) bottom left;
  background-size: 50% 50%;
  background-repeat: no-repeat;
}

@mixin button-social-size($padding-y, $padding-x, $font-size, $line-height, $border-radius) {
  padding: $padding-y $padding-x;
  font-size: $font-size;
  line-height: $line-height;
  border: 0;
  @include border-radius($border-radius);

  &::before {
    width: ($padding-y * 2) + ($font-size * $line-height);
    height: ($padding-y * 2) + ($font-size * $line-height);
    padding: $padding-y 0;
    font-size: $font-size;
    line-height: $line-height;
    @include border-radius($border-radius);
  }

  span {
    margin-left: ($padding-y * 2) + ($font-size * $line-height);
  }

  &.icon {
    width: ($padding-y * 2) + ($font-size * $line-height);
    height: ($padding-y * 2) + ($font-size * $line-height);
  }
}

@mixin avatar($width, $status-width) {
  position: relative;
  display: inline-block;
  width: $width;

  .img-avatar {
    width: $width;
    height: $width;
  }

  .avatar-status {
    position: absolute;
    right: 0;
    bottom: 0;
    display: block;
    width: $status-width;
    height: $status-width;
    border: 1px solid #fff;
    border-radius: 50em;
  }
}

@mixin borders($borders) {
  @each $border in $borders {
    $direction: nth($border, 1);
    @if $direction == "all" {
      $size: map-get(map-get($borders, $direction), size);
      $style: map-get(map-get($borders, $direction), style);
      $color: map-get(map-get($borders, $direction), color);
      border: $size $style $color;
    } @else if $direction == "top" {
      $size: map-get(map-get($borders, $direction), size);
      $style: map-get(map-get($borders, $direction), style);
      $color: map-get(map-get($borders, $direction), color);
      border-top: $size $style $color;
    } @else if $direction == "right" {
      $size: map-get(map-get($borders, $direction), size);
      $style: map-get(map-get($borders, $direction), style);
      $color: map-get(map-get($borders, $direction), color);
      border-right: $size $style $color;
    } @else if $direction == "bottom" {
      $size: map-get(map-get($borders, $direction), size);
      $style: map-get(map-get($borders, $direction), style);
      $color: map-get(map-get($borders, $direction), color);
      border-bottom: $size $style $color;
    } @else if $direction == "left" {
      $size: map-get(map-get($borders, $direction), size);
      $style: map-get(map-get($borders, $direction), style);
      $color: map-get(map-get($borders, $direction), color);
      border-left: $size $style $color;
    }
  }
}

@mixin sidebar-width($borders, $width) {
  $sidebar-width: $width;

  @each $border in $borders {
    $direction: nth($border, 1);
    @if $direction == "all" {
      $size: map-get(map-get($borders, $direction), size);
      $sidebar-width: ($sidebar-width - (2 * $size));
    } @else if $direction == "right" {
      $size: map-get(map-get($borders, $direction), size);
      $sidebar-width: $sidebar-width - $size;
    } @else if $direction == "left" {
      $size: map-get(map-get($borders, $direction), size);
      $sidebar-width: $sidebar-width - $size;
    }
    width: $sidebar-width;
  }
}

@mixin bg-variant($parent, $color) {
  #{$parent} {
    @include border-radius($card-border-radius-inner $card-border-radius-inner $card-border-radius-inner $card-border-radius-inner);
    color: #fff !important;
    background-color: $color !important;
  }
  a#{$parent} {
    @include hover-focus {
      background-color: darken($color, 10%);
    }
  }
}

@mixin card-accent-variant($color) {
  border-top-width: 2px;
  border-top-color: $color;
}

////////////////////////////////////////////////////////预设部分////////////////////////////////////////////////////////

////1.微信默认主色调 2.微信默认警告色
//$colorPrimary: #1AAD19;
//$colorWarn: #E64340;
////微信默认链接颜色
//$linkColor: #586C94;
////线条颜色:1.亮 2.暗
//$lineColor: #E5E5E5, #BCBAB6;
////背景颜色：1.微信默认背景 2.点击后的背景颜色
//$bgColor: #EFEFF4, #ECECEC;
////文字颜色：1.标题 2.亚灰 3.提醒/通知 4.灰色
//$textColor: #000000, #B2B2B2, #E64340, #999999;

////多值变量使用方法,例子：
//$linkColor:#08c #333 !default;//第一个值为默认值，第二个鼠标滑过值
//a{
//  color:nth($linkColor,1);
//  &:hover{
//    color:nth($linkColor,2);
//  }
//}


//$vw: rem(30);
//
//:root {
//  --theme-color: #09F;
//  --text-gray: #999;
//  --text-red: #E64340;
//  --text-orange: #fd9809;
//}
//
//.theme {
//  color: var(--theme-color);
//}
//
//.red {
//  color: var(--text-red);
//}
//
//.gray {
//  color: var(--text-gray);
//}

// 隐藏滚轮（normalize.css已设置）
//::-webkit-scrollbar {
//  display: none;
//}

//防止页面加载时出现 vuejs 的变量名
//[v-cloak] {
//  display: none;
//}

//weUI icon图标库
//@font-face {
//  font-weight: normal;
//  font-style: normal;
//  font-family: "weui";
//  src: url('data:application/octet-stream;base64,AAEAAAALAIAAAwAwR1NVQrD+s+0AAAE4AAAAQk9TLzJAKEx+AAABfAAAAFZjbWFw65cFHQAAAhwAAAJQZ2x5ZvCRR/EAAASUAAAKtGhlYWQMPROtAAAA4AAAADZoaGVhCCwD+gAAALwAAAAkaG10eEJo//8AAAHUAAAASGxvY2EYqhW4AAAEbAAAACZtYXhwASEAVQAAARgAAAAgbmFtZeNcHtgAAA9IAAAB5nBvc3T6bLhLAAARMAAAAOYAAQAAA+gAAABaA+j/////A+kAAQAAAAAAAAAAAAAAAAAAABIAAQAAAAEAACbZbxtfDzz1AAsD6AAAAADUm2dvAAAAANSbZ2///wAAA+kD6gAAAAgAAgAAAAAAAAABAAAAEgBJAAUAAAAAAAIAAAAKAAoAAAD/AAAAAAAAAAEAAAAKAB4ALAABREZMVAAIAAQAAAAAAAAAAQAAAAFsaWdhAAgAAAABAAAAAQAEAAQAAAABAAgAAQAGAAAAAQAAAAAAAQOwAZAABQAIAnoCvAAAAIwCegK8AAAB4AAxAQIAAAIABQMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUGZFZABA6gHqEQPoAAAAWgPqAAAAAAABAAAAAAAAAAAAAAPoAAAD6AAAA+gAAAPoAAAD6AAAA+gAAAPoAAAD6AAAA+gAAAPoAAAD6AAAA+gAAAPoAAAD6AAAA+j//wPoAAAD6AAAAAAABQAAAAMAAAAsAAAABAAAAXQAAQAAAAAAbgADAAEAAAAsAAMACgAAAXQABABCAAAABAAEAAEAAOoR//8AAOoB//8AAAABAAQAAAABAAIAAwAEAAUABgAHAAgACQAKAAsADAANAA4ADwAQABEAAAEGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAAAANwAAAAAAAAAEQAA6gEAAOoBAAAAAQAA6gIAAOoCAAAAAgAA6gMAAOoDAAAAAwAA6gQAAOoEAAAABAAA6gUAAOoFAAAABQAA6gYAAOoGAAAABgAA6gcAAOoHAAAABwAA6ggAAOoIAAAACAAA6gkAAOoJAAAACQAA6goAAOoKAAAACgAA6gsAAOoLAAAACwAA6gwAAOoMAAAADAAA6g0AAOoNAAAADQAA6g4AAOoOAAAADgAA6g8AAOoPAAAADwAA6hAAAOoQAAAAEAAA6hEAAOoRAAAAEQAAAAAARgCMANIBJAF4AcQCMgJgAqgC/ANIA6YD/gROBKAE9AVaAAAAAgAAAAADrwOtABQAKQAAASIHBgcGFBcWFxYyNzY3NjQnJicmAyInJicmNDc2NzYyFxYXFhQHBgcGAfV4Z2Q7PDw7ZGfwZmQ7PDw7ZGZ4bl5bNjc3Nlte215bNjc3NlteA608O2Rn8GdjOzw8O2Nn8GdkOzz8rzc1W17bXlw1Nzc1XF7bXls1NwAAAAACAAAAAAOzA7MAFwAtAAABIgcGBwYVFBcWFxYzMjc2NzY1NCcmJyYTBwYiLwEmNjsBETQ2OwEyFhURMzIWAe52Z2Q7PT07ZGd2fGpmOz4+O2ZpIXYOKA52Dg0XXQsHJgcLXRcNA7M+O2ZqfHZnZDs9PTtkZ3Z9aWY7Pv3wmhISmhIaARcICwsI/ukaAAMAAAAAA+UD5QAXACMALAAAASIHBgcGFRQXFhcWMzI3Njc2NTQnJicmAxQrASI1AzQ7ATIHJyImNDYyFhQGAe6Ecm9BRERBb3KEiXZxQkREQnF1aQIxAwgCQgMBIxIZGSQZGQPkREJxdomEcm9BRERBb3KEinVxQkT9HQICAWICAjEZIxkZIxkAAAAAAgAAAAADsQPkABkALgAAAQYHBgc2BREUFxYXFhc2NzY3NjURJBcmJyYTAQYvASY/ATYyHwEWNjclNjIfARYB9VVVQk+v/tFHPmxebGxdbT1I/tGvT0JVo/7VBASKAwMSAQUBcQEFAgESAgUBEQQD4xMYEhk3YP6sjnVlSD8cHD9IZXWOAVRgNxkSGP62/tkDA48EBBkCAVYCAQHlAQIQBAAAAAADAAAAAAOxA+QAGwAqADMAAAEGBwYHBgcGNxEUFxYXFhc2NzY3NjURJBcmJyYHMzIWFQMUBisBIicDNDYTIiY0NjIWFAYB9UFBODssO38gRz5sXmxsXW09SP7YqFBBVW80BAYMAwImBQELBh4PFhYeFRUD5A8SDhIOEikK/q2PdWRJPh0dPklkdY8BU141GRIY/AYE/sYCAwUBOgQG/kAVHxUVHxUAAAACAAAAAAPkA+QAFwAtAAABIgcGBwYVFBcWFxYzMjc2NzY1NCcmJyYTAQYiLwEmPwE2Mh8BFjI3ATYyHwEWAe6Ecm9BQ0NCbnODiXVxQkREQnF1kf6gAQUBowMDFgEFAYUCBQEBQwIFARUEA+NEQnF1iYNzbkJDQ0FvcoSJdXFCRP6j/qUBAagEBR4CAWYBAQENAgIVBAAAAAQAAAAAA68DrQAUACkAPwBDAAABIgcGBwYUFxYXFjI3Njc2NCcmJyYDIicmJyY0NzY3NjIXFhcWFAcGBwYTBQ4BLwEmBg8BBhYfARYyNwE+ASYiFzAfAQH1eGdkOzw8O2Rn8GZkOzw8O2RmeG5eWzY3NzZbXtteWzY3NzZbXmn+9gYSBmAGDwUDBQEGfQUQBgElBQELEBUBAQOtPDtkZ/BnYzs8PDtjZ/BnZDs8/K83NVte215cNTc3NVxe215bNTcCJt0FAQVJBQIGBAcRBoAGBQEhBQ8LBAEBAAABAAAAAAO7AzoAFwAAEy4BPwE+AR8BFjY3ATYWFycWFAcBBiInPQoGBwUHGgzLDCELAh0LHwsNCgr9uQoeCgGzCyEOCw0HCZMJAQoBvgkCCg0LHQv9sQsKAAAAAAIAAAAAA+UD5gAXACwAAAEiBwYHBhUUFxYXFjMyNzY3NjU0JyYnJhMHBi8BJicmNRM0NjsBMhYVExceAQHvhHJvQUNDQm5zg4l1cUJEREJxdVcQAwT6AwIEEAMCKwIDDsUCAQPlREJxdYmDc25CQ0NBb3KEiXVxQkT9VhwEAncCAgMGAXoCAwMC/q2FAgQAAAQAAAAAA68DrQADABgALQAzAAABMB8BAyIHBgcGFBcWFxYyNzY3NjQnJicmAyInJicmNDc2NzYyFxYXFhQHBgcGAyMVMzUjAuUBAfJ4Z2Q7PDw7ZGfwZmQ7PDw7ZGZ4bl5bNjc3Nlte215bNjc3NltemyT92QKDAQEBLDw7ZGfwZ2M7PDw7Y2fwZ2Q7PPyvNzVbXtteXDU3NzVcXtteWzU3AjH9JAAAAAMAAAAAA+QD5AAXACcAMAAAASIHBgcGFRQXFhcWMzI3Njc2NTQnJicmAzMyFhUDFAYrASImNQM0NhMiJjQ2MhYUBgHuhHJvQUNDQm5zg4l1cUJEREJxdZ42BAYMAwInAwMMBh8PFhYeFhYD40RCcXWJg3NuQkNDQW9yhIl1cUJE/vYGBf7AAgMDAgFABQb+NhYfFhYfFgAABAAAAAADwAPAAAgAEgAoAD0AAAEyNjQmIgYUFhcjFTMRIxUzNSMDIgcGBwYVFBYXFjMyNzY3NjU0Jy4BAyInJicmNDc2NzYyFxYXFhQHBgcGAfQYISEwISFRjzk5yTorhG5rPT99am+DdmhlPD4+PMyFbV5bNTc3NVte2l5bNTc3NVteAqAiLyIiLyI5Hf7EHBwCsT89a26Ed8w8Pj48ZWh2g29qffyjNzVbXtpeWzU3NzVbXtpeWzU3AAADAAAAAAOoA6gACwAgADUAAAEHJwcXBxc3FzcnNwMiBwYHBhQXFhcWMjc2NzY0JyYnJgMiJyYnJjQ3Njc2MhcWFxYUBwYHBgKOmpocmpocmpocmpq2dmZiOjs7OmJm7GZiOjs7OmJmdmtdWTQ2NjRZXdZdWTQ2NjRZXQKqmpocmpocmpocmpoBGTs6YmbsZmI6Ozs6YmbsZmI6O/zCNjRZXdZdWTQ2NjRZXdZdWTQ2AAMAAAAAA+kD6gAaAC8AMAAAAQYHBiMiJyYnJjQ3Njc2MhcWFxYVFAcGBwEHATI3Njc2NCcmJyYiBwYHBhQXFhcWMwKONUBCR21dWjU3NzVaXdpdWzU2GBcrASM5/eBXS0grKysrSEuuSkkqLCwqSUpXASMrFxg2NVtd2l1aNTc3NVpdbUdCQDX+3jkBGSsrSEuuSkkqLCwqSUquS0grKwAC//8AAAPoA+gAFAAwAAABIgcGBwYQFxYXFiA3Njc2ECcmJyYTFg4BIi8BBwYuATQ/AScmPgEWHwE3Nh4BBg8BAfSIdHFDRERDcXQBEHRxQ0REQ3F0SQoBFBsKoqgKGxMKqKIKARQbCqKoChsUAQqoA+hEQ3F0/vB0cUNERENxdAEQdHFDRP1jChsTCqiiCgEUGwqiqAobFAEKqKIKARQbCqIAAAIAAAAAA+QD5AAXADQAAAEiBwYHBhUUFxYXFjMyNzY3NjU0JyYnJhMUBiMFFxYUDwEGLwEuAT8BNh8BFhQPAQUyFh0BAe6Ecm9BQ0NCbnODiXVxQkREQnF1fwQC/pGDAQEVAwTsAgEC7AQEFAIBhAFwAgMD40RCcXWJg3NuQkNDQW9yhIl1cUJE/fYCAwuVAgQCFAQE0AIFAtEEBBQCBQGVCwMDJwAAAAUAAAAAA9QD0wAjACcANwBHAEgAAAERFAYjISImNREjIiY9ATQ2MyE1NDYzITIWHQEhMhYdARQGIyERIREHIgYVERQWOwEyNjURNCYjISIGFREUFjsBMjY1ETQmKwEDeyYb/XYbJkMJDQ0JAQYZEgEvExkBBgkNDQn9CQJc0QkNDQktCQ0NCf7sCQ0NCS0JDQ0JLQMi/TQbJiYbAswMCiwJDS4SGRkSLg0JLAoM/UwCtGsNCf5NCQ0NCQGzCQ0NCf5NCQ0NCQGzCQ0AAAAAEADGAAEAAAAAAAEABAAAAAEAAAAAAAIABwAEAAEAAAAAAAMABAALAAEAAAAAAAQABAAPAAEAAAAAAAUACwATAAEAAAAAAAYABAAeAAEAAAAAAAoAKwAiAAEAAAAAAAsAEwBNAAMAAQQJAAEACABgAAMAAQQJAAIADgBoAAMAAQQJAAMACAB2AAMAAQQJAAQACAB+AAMAAQQJAAUAFgCGAAMAAQQJAAYACACcAAMAAQQJAAoAVgCkAAMAAQQJAAsAJgD6d2V1aVJlZ3VsYXJ3ZXVpd2V1aVZlcnNpb24gMS4wd2V1aUdlbmVyYXRlZCBieSBzdmcydHRmIGZyb20gRm9udGVsbG8gcHJvamVjdC5odHRwOi8vZm9udGVsbG8uY29tAHcAZQB1AGkAUgBlAGcAdQBsAGEAcgB3AGUAdQBpAHcAZQB1AGkAVgBlAHIAcwBpAG8AbgAgADEALgAwAHcAZQB1AGkARwBlAG4AZQByAGEAdABlAGQAIABiAHkAIABzAHYAZwAyAHQAdABmACAAZgByAG8AbQAgAEYAbwBuAHQAZQBsAGwAbwAgAHAAcgBvAGoAZQBjAHQALgBoAHQAdABwADoALwAvAGYAbwBuAHQAZQBsAGwAbwAuAGMAbwBtAAAAAgAAAAAAAAAKAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAASAQIBAwEEAQUBBgEHAQgBCQEKAQsBDAENAQ4BDwEQAREBEgETAAZjaXJjbGUIZG93bmxvYWQEaW5mbwxzYWZlX3N1Y2Nlc3MJc2FmZV93YXJuB3N1Y2Nlc3MOc3VjY2Vzcy1jaXJjbGURc3VjY2Vzcy1uby1jaXJjbGUHd2FpdGluZw53YWl0aW5nLWNpcmNsZQR3YXJuC2luZm8tY2lyY2xlBmNhbmNlbAZzZWFyY2gFY2xlYXIEYmFjawZkZWxldGUAAAAA') format('truetype');
//}

//.weui-icon-circle:before { content: "\EA01" } /* '' */
//.weui-icon-download:before { content: "\EA02" } /* '' */
//.weui-icon-info:before { content: "\EA03" } /* '' */
//.weui-icon-safe-success:before { content: "\EA04" } /* '' */
//.weui-icon-safe-warn:before { content: "\EA05" } /* '' */
//.weui-icon-success:before { content: "\EA06" } /* '' */
//.weui-icon-success-circle:before { content: "\EA07" } /* '' */
//.weui-icon-success-no-circle:before { content: "\EA08" } /* '' */
//.weui-icon-waiting:before { content: "\EA09" } /* '' */
//.weui-icon-waiting-circle:before { content: "\EA0A" } /* '' */
//.weui-icon-warn:before { content: "\EA0B" } /* '' */
//.weui-icon-info-circle:before { content: "\EA0C" } /* '' */
//.weui-icon-cancel:before { content: "\EA0D" } /* '' */
//.weui-icon-search:before { content: "\EA0E" } /* '' */
//.weui-icon-clear:before { content: "\EA0F" } /* '' */
//.weui-icon-back:before { content: "\EA10" } /* '' */
//.weui-icon-delete:before { content: "\EA11" } /* '' */

//////////////////////////////////////////////////////sass命令说明//////////////////////////////////////////////////////
//
//              1. @extend  命令用来继承另一个选择器
//              2. @include 命令调用mixin混合器
//              3. 颜色函数：
//                          通过改变颜色的亮度值，让颜色变亮 lighten(#cc3, 10%) // #d6d65c
//                          通过改变颜色的亮度值，让颜色变暗 darken(#cc3, 10%) // #a3a329
//                          将一个颜色变成灰色 grayscale(#cc3)  // #808080
//                          返回一个补充色 complement(#cc3) // #33c
//              4. 高级语法略
//
//用法举例

//.flexbox {
//  @include flexbox((
//          display: flex,
//          flex-direction: row-reverse,
//          flex-wrap: wrap-reverse,
//          flex-flow: row-reverse wrap-reverse,
//          order: 1,
//          flex: 1 0 auto,
//          flex-grow: 1,
//          flex-shrink: 0,
//          flex-basis: auto,
//          justify-content: flex-start,
//          align-items: flex-start,
//          align-self: flex-start,
//          align-content: flex-start
//  ),$version: 1);
//}

//注：$version 为 1 时，只做 火狐和谷歌浏览器的兼容，为 2 时，只做微软的兼容,当不取值时（即：‘,$version: 1’删除, 括号保留），仅做chrome浏览器兼容写法，有且仅当flexbox才有这种 $version 特殊语法。

//.crazy    { @include border-radius(1px 3px 5px 7px, 2px 4px 6px 8px)}

//.div {
//  @include box-sizing();
//  @include box-shadow(default, 2px 2px 5px #222222);
//  @include background-image(linear-gradient(white, #cccccc, #aaaaaa));//写法1：会把当前渐变色转换为64位svg且向下兼容。
//  background-image: -svg(linear-gradient(120deg, #2ac363, #cd8c14, #9c4cc2));//写法2：会把当前渐变色转换为64位svg, 不做向下兼容。
//}

//$ipt:input;
//$btm:bottom;
//.#{$ipt}{ /*这里输出.input{}*/
//  @include setLine()
//}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
